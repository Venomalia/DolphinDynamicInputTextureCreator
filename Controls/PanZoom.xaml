<UserControl x:Class="DolphinDynamicInputTextureCreator.Controls.PanZoom"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:data="clr-namespace:DolphinDynamicInputTexture.Data;assembly=DolphinDynamicInputTexture"
             xmlns:controls="clr-namespace:DolphinDynamicInputTextureCreator.Controls"
             xmlns:converters="clr-namespace:DolphinDynamicInputTextureCreator.ValueConverters"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:ScaleFactorToPercentageValueConverter x:Key="ScaleFactorToPercentageValueConverter" />
        <converters:PathToImageValueConverter x:Key="PathToImageValueConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ConverterCombinationConverter x:Key="InvertBoolToVis">
            <converters:InvertBoolConverter />
            <BooleanToVisibilityConverter />
        </converters:ConverterCombinationConverter>
        <converters:BoolToSolidColorBrushConverter x:Key="BoolToMainColorBrushConverter" FalseValue="White" TrueValue="#242424"/>
        <converters:BoolToSolidColorBrushConverter x:Key="BoolToSecondaryColorBrushConverter" FalseValue="#b9b9b9" TrueValue="#373737"/>
        <converters:BoolToColorConverter x:Key="BoolToResizerColorBrushConverter" FalseValue="Black" TrueValue="LightBlue"/>
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem Header="Delete" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}},
                                              Path=DataContext.InputPack.DeleteRegionCommand}" CommandParameter="{Binding}" Icon="{StaticResource Icon.Delete}" />
        </ContextMenu>
        <ContextMenu x:Key="ItemSubContextMenu">
            <MenuItem Header="Auto SubRegions" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}},
                                              Path=DataContext.InputPack.AutoSubRegionCommand}" CommandParameter="{Binding}" Icon="" />
        </ContextMenu>

        <Style TargetType="ListBoxItem" x:Key="RectRegionItemStyle">
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
            <Setter Property="Canvas.Left" Value="{Binding RegionRect.ScaledX}" />
            <Setter Property="Canvas.Top" Value="{Binding RegionRect.ScaledY}" />
            <Setter Property="Height" Value="{Binding RegionRect.ScaledHeight}" />
            <Setter Property="Width" Value="{Binding RegionRect.ScaledWidth}" />
            <Setter Property="ContentTemplate" Value="{StaticResource RegionTemplate}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid MouseDown="GridRegion_MouseDown">
                            <Grid.Background>
                                <SolidColorBrush Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}},
                                    Path=DataContext.InputPack.SelectedRegionBrush.UseDarkBackground, NotifyOnTargetUpdated=True, Converter={StaticResource BoolToResizerColorBrushConverter}}" Opacity="0.25" />
                            </Grid.Background>
                            <Border BorderBrush="Black" BorderThickness="2"/>
                            <ContentPresenter ContentSource="Content" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListBoxItem" x:Key="MainRectRegionItemStyle" BasedOn="{StaticResource RectRegionItemStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}}, Path=DataContext.InputPack.SelectedRegionBrush.EditSubRegions, NotifyOnTargetUpdated=True}" Value="true">
                    <DataTrigger.Setters>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="{x:Type data:InputRegion}">
                                    <ListBox ItemsSource="{Binding SubEntries}" SelectedValue="{Binding RegionRect.Pack.SelectedRegion, NotifyOnTargetUpdated=True}" Style="{StaticResource RectRegionListBoxStyle}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContextMenu" Value="{StaticResource ItemSubContextMenu}"/>
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding InputPack.Textures.ValidSelection, Converter={StaticResource BoolToVis}}">
            <ScrollViewer VerticalScrollBarVisibility="Visible"
                  HorizontalScrollBarVisibility="Visible" x:Name="scr" MouseMove="Grid_MouseMove"
                  ScrollChanged="ScrollChanged" Background="DarkGray">
                <Grid MouseDown="Grid_MouseDown" MouseUp="Grid_MouseUp" MouseWheel="Grid_MouseWheel">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid>
                            <Grid.Background>
                                <DrawingBrush TileMode="Tile" Viewport="0,0,2,2"
                                      ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{Binding InputPack.SelectedRegionBrush.UseDarkBackground, Converter={StaticResource BoolToMainColorBrushConverter}}" Geometry="M0,0 L0,0 0,10 10,10 10,0 Z" />
                                            <GeometryDrawing Brush="{Binding InputPack.SelectedRegionBrush.UseDarkBackground, Converter={StaticResource BoolToSecondaryColorBrushConverter}}" Geometry="M0,0 L0,0 0,5, 10,5 10,10 5,10 5,0 Z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Grid.Background>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding InputPack.ScaleFactor}" ScaleY="{Binding InputPack.ScaleFactor}" />
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Image Source="{Binding InputPack.Textures.Selected.TexturePath, Converter={StaticResource PathToImageValueConverter}}"  Width="{Binding InputPack.Textures.Selected.ImageWidth}" Height="{Binding InputPack.Textures.Selected.ImageHeight}" Stretch="Fill" x:Name="Img" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                VerticalAlignment="Top" HorizontalAlignment="Left" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            </Image>
                        </Grid>

                        <ListBox x:Name="lb" ItemsSource="{Binding InputPack.Textures.Selected.Regions}" SelectedValue="{Binding InputPack.SelectedRegion, NotifyOnTargetUpdated=True}" Style="{StaticResource RectRegionListBoxStyle}" ItemContainerStyle="{DynamicResource MainRectRegionItemStyle}"/>
                    </Grid>
                </Grid>
            </ScrollViewer>
            <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20" Background="LightGray" Width="125" Height="50" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <TextBlock Text="Zoom = " />
                        <TextBlock Text="{Binding InputPack.ScaleFactor, Converter={StaticResource ScaleFactorToPercentageValueConverter}}" />
                    </StackPanel>
                    <Button Grid.Row="1" Content="Reset" Command="{Binding InputPack.ResetScaleFactorCommand}" />
                </Grid>
            </Border>
        </Grid>
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding InputPack.Textures.ValidSelection, Converter={StaticResource InvertBoolToVis}}">
            <TextBlock FontSize="24" TextWrapping="Wrap" TextAlignment="Center" LineHeight="50">
                Click the <Bold>'Add Texture(s)'</Bold> button on the left to get started. <LineBreak />
                Once added, <Italic>double click</Italic> on a texture to begin placing emulated regions.
            </TextBlock>
        </Grid>
    </Grid>
</UserControl>